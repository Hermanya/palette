{"version":3,"file":"static/webpack/static/development/pages/material-ui.js.b99045269256ecbe5422.hot-update.js","sources":["webpack:///./components/App.js","webpack:///./components/Code.js","webpack:///./pages/material-ui.js"],"sourcesContent":["import React from \"react\";\nimport * as ColorSliders from \"react-color-sliders\";\nimport { Code } from \"./Code\";\nimport { LightnessControl } from \"./LightnessControl\";\nimport { HueControl } from \"./HueControl\";\nimport { Label } from \"./Label\";\nimport { Herman } from \"./Herman\";\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...props.initialState,\n      exportType: props.initialState.exportTypes\n    };\n  }\n  hsl = (hue, lightness) => {\n    return `hsl(${this.state.hues.find(_ => _.name === hue).value}, ${\n      this.state.saturation\n    }%, ${this.state.lightnesses.find(_ => _.name === lightness).value}%)`;\n  };\n  setHue = (name, value) => {\n    this.setState({\n      hues: this.state.hues.map(_ => (_.name === name ? { ..._, value } : _))\n    });\n  };\n  setLightness = (name, value) => {\n    this.setState({\n      lightnesses: this.state.lightnesses.map(\n        _ => (_.name === name ? { ..._, value } : _)\n      )\n    });\n  };\n  setSaturation = saturation => {\n    this.setState({\n      saturation\n    });\n  };\n  setExportType = type => {\n    this.setState({\n      exportType: type\n    });\n  };\n  render() {\n    const { columnClass } = this.props;\n    return (\n      <div className=\"position-relative overflow-x-hidden \">\n        <div className=\"py-5 container position-relative z-index-2\">\n          <h1 className=\"display-4 mb-4 text-center\">\n            <strong>\n              Make a{\" \"}\n              <span style={{ color: this.props.libraryColor }}>\n                {this.props.libraryName}\n              </span>{\" \"}\n              color palette\n            </strong>{\" \"}\n            for your theme\n          </h1>\n          <section className=\"row mb-4\">\n            <div className={columnClass}>\n              <section className={\"\"}>\n                <Label>Saturation</Label>\n                <ColorSliders.SaturationSlider\n                  hue={this.state.hues[0].value}\n                  name={\"saturation\"}\n                  saturation={this.state.saturation}\n                  lightness={\n                    this.state.lightnesses[\n                      Math.floor(this.state.lightnesses.length / 2)\n                    ].value\n                  }\n                  onUpdate={this.setSaturation}\n                />\n              </section>\n              {this.state.hues.map(hue => {\n                return (\n                  <div key={hue.name} className={\"mt-4\"}>\n                    <Label>{hue.name}</Label>\n                    <HueControl\n                      style={{ marginBottom: 42 }}\n                      name={hue.name}\n                      hue={hue.value}\n                      lightness={\n                        this.state.lightnesses[\n                          Math.floor(this.state.lightnesses.length / 2)\n                        ].value\n                      }\n                      saturation={this.state.saturation}\n                      setHue={this.setHue}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n            {this.state.lightnesses.map(lightness => (\n              <div className={columnClass} key={lightness.name}>\n                <Label>{lightness.name}</Label>\n                <LightnessControl\n                  className={\"mb-4\"}\n                  saturation={this.state.saturation}\n                  setLightness={this.setLightness}\n                  {...lightness}\n                />\n                {this.state.hues.map(hue => (\n                  <div key={hue.name + lightness.name} className={`${\"\"} mb-4`}>\n                    <div\n                      className={`rounded shadow-sm`}\n                      style={{\n                        height: 64,\n                        background: `linear-gradient(to bottom,\n                        ${this.hsl(hue.name, lightness.name)},\n                        ${this.hsl(hue.name, lightness.name)})`\n                      }}\n                    />\n                  </div>\n                ))}\n              </div>\n            ))}\n            <section className=\"col-lg-4 col-md-6\">\n              <h2 className=\"lead\">How this works:</h2>\n              <ol>\n                <li>You adjust the base color per row</li>\n                <li>Change lightness per column</li>\n                <li>\n                  Set color intensity across all colors using the saturation\n                  slider\n                </li>\n                <li>\n                  Export your colors in{\" \"}\n                  {this.props.exportTypes.map(_ => _.name).join(\", \")}\n                </li>\n              </ol>\n              <p className=\"text-justify\">\n                This app is built using React. Source code is available on{\" \"}\n                <a href=\"https://github.com/Hermanya/palette/tree/master/example\">\n                  GitHub\n                </a>\n                {\". \"}\n                All sliders used on this page are published on npm as{\" \"}\n                <var>react-color-sliders</var>,{\" \"}\n                <a href=\"https://github.com/Hermanya/palette/blob/master/README.md\">\n                  see documentation\n                </a>\n                .\n              </p>\n              <h2 className=\"lead\">Need a palette for another library?</h2>\n              <ul>\n                <li>Bootstrap</li>\n              </ul>\n\n              <Herman className=\"mb-4\" />\n              <Code\n                lightnesses={this.state.lightnesses}\n                hues={this.state.hues}\n                saturation={this.state.saturation}\n                exportTypes={this.props.exportTypes}\n                exportType={this.state.exportType}\n                setExportType={this.setExportType}\n                hsl={this.hsl}\n              />\n            </section>\n          </section>\n        </div>\n        <i\n          className=\"fas fa-palette position-absolute text-light z-index-1\"\n          style={{\n            top: \"-5vw\",\n            right: \"-5vw\",\n            transform: \"rotate(-90deg)\",\n            fontSize: \"25vw\"\n          }}\n        />\n        <i\n          className=\"fas fa-swatchbook position-absolute text-light z-index-1\"\n          style={{\n            transform: \"rotate(90deg)\",\n            top: \"1vw\",\n            left: \"1vw\",\n            fontSize: \"25vw\"\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nexport const Code = ({\n  hues,\n  lightnesses,\n  saturation,\n  exportTypes,\n  exportType,\n  setExportType,\n  className,\n  hsl,\n  ...props\n}) => (\n  <pre\n    className={`bg-dark text-white p-3 rounded shadow small ${className}`}\n    {...props}\n  >\n    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n      {exportTypes.map(({ name }) => (\n        <button\n          key={name}\n          type=\"button\"\n          onClick={() => setExportType(name)}\n          className={`btn btn-sm btn-outline-light ${\n            exportType === name ? \"bg-light text-dark\" : \"\"\n          }`}\n        >\n          {name.toUpperCase()}\n        </button>\n      ))}\n    </div>\n    {\"\\n\\n\"}\n    <code>\n      {exportTypes.find(_ => _.name === exportType).toString({\n        hues,\n        lightnesses,\n        saturation,\n        hsl\n      })}\n    </code>\n  </pre>\n);\n","import React from \"react\";\nimport Head from \"next/head\";\nimport \"../components/index.scss\";\nimport App from \"../components/App\";\n\nconst Page = () => (\n  <React.Fragment>\n    <Head>\n      <meta name=\"Description\" content=\"Non-material colors for Material UI\" />\n      <title>Non-material colors for Material UI</title>\n    </Head>\n    <App\n      libraryName={\"Material UI\"}\n      libraryColor={\"#2196f3\"}\n      initialState={{\n        hues: [\n          { name: \"red\", value: 2 }, // hsl(2°, 76%, 54%)\n          { name: \"orange\", value: 30 }, // hsl(30°, 91%, 61%)\n          { name: \"yellow\", value: 54 }, // hsl(54°, 100%, 65%)\n          { name: \"green\", value: 145 }, // hsl(145°, 55%, 49%)\n          { name: \"teal\", value: 174 }, // hsl(174°, 48%, 53%)\n          { name: \"blue\", value: 207 }, // hsl(207°, 71%, 53%)\n          { name: \"indigo\", value: 231 }, // hsl(231°, 51%, 60%)\n          { name: \"purple\", value: 264 }, // hsl(264°, 69%, 63%)\n          { name: \"pink\", value: 340 } // hsl(340°, 88%, 70%)\n        ],\n        lightnesses: [\n          \"900\", // hsl(328°, 81%, 29%)\n          \"800\",\n          \"700\",\n          \"600\",\n          \"500\",\n          \"400\",\n          \"300\",\n          \"200\",\n          \"100\" // hsl(339°, 81%, 85%)\n        ].map((name, index, all) => {\n          const value = Math.round(29 + (50 / all.length) * index);\n          return {\n            name,\n            value,\n            domain: [value - 17, value + 17]\n          };\n        }),\n        saturation: 71,\n        exportType: \"JS\"\n      }}\n      exportTypes={[\n        {\n          name: \"JS\",\n          toString: ({ hues, lightnesses, saturation, hsl }) =>\n            `\nvar colors = {\\n${hues\n              .map(hue => `  '${hue.name}': '${hsl(hue.name)}'`)\n              .join(\",\\n\")}\\n}\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\npalette: {\n    primary: {\n    // light: will be calculated from palette.primary.main,\n    main: '#ff4400',\n    // dark: will be calculated from palette.primary.main,\n    // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n    light: '#0066ff',\n    main: '#0044ff',\n    // dark: will be calculated from palette.secondary.main,\n    contrastText: '#ffcc00',\n    },\n    // error: will use the default color\n},\n});`\n        }\n      ]}\n      columnClass=\"col-lg-1 col-md-3 col-6 p-1\"\n    />\n  </React.Fragment>\n);\n\nexport default Page;\n"],"mappings":"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","sourceRoot":""}