{"version":3,"file":"static/webpack/static/development/pages/bootstrap.js.b59dcc7247f080dc564a.hot-update.js","sources":["webpack:///./pages/bootstrap.js"],"sourcesContent":["import React from \"react\";\nimport Head from \"next/head\";\nimport \"../components/index.scss\";\nimport App from \"../components/App\";\nconst chroma = require(\"chroma-js\");\n\nconst Page = () => (\n  <React.Fragment>\n    <Head>\n      <meta\n        name=\"Description\"\n        content=\"Make a color palette in an intuitive way\"\n      />\n      <title>Make a bootstrap color palette</title>\n    </Head>\n    <App\n      libraryName={\"Bootstrap\"}\n      libraryColor={\"#563d7c\"}\n      initialState={{\n        hues: [\n          { name: \"blue\", value: 211 }, // hsl(211°, 100%, 50%)\n          { name: \"indigo\", value: 253 }, // hsl(263°, 90%, 51%)\n          { name: \"purple\", value: 271 }, // hsl(261°, 51%, 51%)\n          { name: \"pink\", value: 332 }, // hsl(332°, 79%, 58%)\n          { name: \"red\", value: 354 }, // hsl(354°, 70%, 54%)\n          { name: \"orange\", value: 27 }, // hsl(27°, 98%, 54%)\n          { name: \"yellow\", value: 45 }, // hsl(45°, 100%, 51%)\n          { name: \"green\", value: 134 }, // hsl(134°, 61%, 41%)\n          { name: \"teal\", value: 162 }, // hsl(162°, 73%, 46%)\n          { name: \"cyan\", value: 188 } // hsl(188°, 78%, 41%)\n        ],\n        lightnesses: [\n          \"900\", // hsl(328°, 81%, 29%)\n          \"800\",\n          \"700\",\n          \"600\",\n          \"500\",\n          \"400\",\n          \"300\",\n          \"200\",\n          \"100\" // hsl(339°, 81%, 85%)\n        ].map((name, index, all) => {\n          const value = Math.round(10 + (90 / all.length) * index);\n          return {\n            name,\n            value,\n            domain: [value - 5, value + 5]\n          };\n        }),\n        saturation: 80\n      }}\n      exportTypes={[\n        //         {\n        //           name: \"SASS\",\n        //           toString: ({ hues, lightnesses, saturation, hsl }) =>\n        //             hues\n        //               .map(hue => `$${hue.name}: ${hsl(hue.name, \"500\")};`)\n        //               .join(\"\\n\") +\n        //             `\n\n        // $primary:       $blue;\n        // $secondary:     $gray-600;\n        // $success:       $green;\n        // $info:          $cyan;\n        // $warning:       $yellow;\n        // $danger:        $red;\n        //             `\n        //         },\n        {\n          name: \"CSS\",\n          toString: ({ hues, lightnesses, saturation, hsl }) =>\n            `\n:root {\\n${hues\n              .map(hue =>\n                lightnesses\n                  .map(\n                    lightness =>\n                      console.log(hue, lightness) ||\n                      `  --${hue.name}_${lightness.name}: ${chroma(\n                        hsl(hue.name, lightness.name)\n                      )\n                        .rgb()\n                        .join(\", \")}`\n                  )\n                  .concat([\n                    `  --${hue.name}_50: ${chroma(\n                      `hsl(${hue.value}, 100%, 95%)`\n                    )\n                      .rgb()\n                      .join(\", \")}`,\n                    `  --${hue.name}_0: ${chroma(\n                      `hsl(${hue.value}, 100%, 100%)`\n                    )\n                      .rgb()\n                      .join(\", \")}`\n                  ])\n              )\n              .reduce((a, x) => [...a, ...x])\n              .join(\";\\n\")}\\n}\n          `\n        }\n      ]}\n      columnClass=\"col\"\n    />\n  </React.Fragment>\n);\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AAEA;AAFA;AAWA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA/BA;AAiCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AAAA;AAHA;AAwBA;AAAA;AA3BA;AAFA;AAkCA;AAvFA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AACA;AAoGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}